{"ast":null,"code":"var _jsxFileName = \"/Users/cameronbramley/personal_website/cameron/src/components/ReadMore.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadMoreReadLess = ({\n  text,\n  maxLength = 300\n}) => {\n  _s();\n  // State to control whether the full text is shown or not\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // Toggle the expanded state\n  const toggleReadMore = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // Determine whether to show the full text or a truncated version\n  const displayedText = isExpanded ? text : `${text.slice(0, maxLength)}...`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: displayedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"text-green-500\",\n      onClick: toggleReadMore,\n      children: isExpanded ? 'Read Less' : 'Read More'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(ReadMoreReadLess, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n_c = ReadMoreReadLess;\nexport default ReadMoreReadLess;\nvar _c;\n$RefreshReg$(_c, \"ReadMoreReadLess\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReadMoreReadLess","text","maxLength","_s","isExpanded","setIsExpanded","toggleReadMore","displayedText","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","class","onClick","_c","$RefreshReg$"],"sources":["/Users/cameronbramley/personal_website/cameron/src/components/ReadMore.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ReadMoreReadLess = ({ text, maxLength = 300 }) => {\n    // State to control whether the full text is shown or not\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    // Toggle the expanded state\n    const toggleReadMore = () => {\n        setIsExpanded(!isExpanded);\n    };\n\n    // Determine whether to show the full text or a truncated version\n    const displayedText = isExpanded ? text : `${text.slice(0, maxLength)}...`;\n\n    return (\n        <div>\n            <p>{displayedText}</p>\n            <button class=\"text-green-500\"onClick={toggleReadMore}>\n                {isExpanded ? 'Read Less' : 'Read More'}\n            </button>\n        </div>\n    );\n};\n\nexport default ReadMoreReadLess;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,SAAS,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EACpD;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMS,cAAc,GAAGA,CAAA,KAAM;IACzBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMG,aAAa,GAAGH,UAAU,GAAGH,IAAI,GAAG,GAAGA,IAAI,CAACO,KAAK,CAAC,CAAC,EAAEN,SAAS,CAAC,KAAK;EAE1E,oBACIH,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAIF;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBd,OAAA;MAAQe,KAAK,EAAC,gBAAgB;MAAAC,OAAO,EAAET,cAAe;MAAAG,QAAA,EACjDL,UAAU,GAAG,WAAW,GAAG;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACV,EAAA,CApBIH,gBAAgB;AAAAgB,EAAA,GAAhBhB,gBAAgB;AAsBtB,eAAeA,gBAAgB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}